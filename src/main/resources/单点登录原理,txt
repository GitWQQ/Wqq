SSO单点登录：
（Single Sign On）
	简单点就是在一个多系统共存的环境下，用户在一处登录，就不用在其他系统中登录，也就是用户的一次登录能得到其他所有系统的信任。
	实现单点登录说到底就是要解决如何生产和存储那个信任，再就是其他系统如何验证这个信任的有效性，因此
	要点就以下两个：
		①，存储信任
		②，验证信任	
		
三种实现单点登录的方式
	方式一：
		以Cookie作为凭证媒介
		最简单的单点登录实现方式，是使用cookie作为媒介，存放用户凭证，
		用户登录父应用后，返回一个加密的cookie，当用户访问子应用的时候，携带上这个cookie，
		授权应用解密cookie并进行校验，校验通过则登录当前用户。
	
   |------|														
   | 用户   |						父应用				   子应用
   ----|----					   |					|
	   |						   | 		            |
	   |						   |		 		    |
	|-------|	登录                              |------|					|	
	|		| ---------------> | 	  |				    |
	|		|				   |	  |			        |
	|		|				   |	  |				    |
	|-------| <----------------|------|                 |
		|		登录成功后在客户端生成Cookie			    |
		|			               |                    |
		|	                       |                    |
		|	                       |                    |
		|                          |                    |
		|                          |                    |
	――――――――――               登录      |				    |			
 	|		  |--------------------------------------->|--------| 
	|		  |										   |	    |----------|			
	|		  |                                        |	    |		   | 验证Cookie	
	|		  |										   |		|		   |		
	|		  |                                        |		|   <------|
	|		  |                                        |		|
	___________――――――《――――――――――――――――――――――――――――――――――――――――――――
						 验证通过登录成功
						 
	这种方式把信任存在客户端的Cookie中，的弊端是：
		Cookie不安全
		不能跨域实现免登录
		
方式二：
	 通过JSONP实现
	 用户在父应用中登录后，跟Session匹配的Cookie会存储到客户端中，
	 当用户需要登录子应用的时候，授权应用访问父应用提供的JSONP接口，
	 并在请求中带上父应用域名下的Cookie，父应用接收到请求，验证用户的登录状态，返回
	 加密信息，子应用通过解析返回来的加密信息来验证用户，如果通过验证
	 则登录用户
	 
	 优点：解决了跨域问题
	 弊端：安全性跟把信任存在Cookie差不多，如果一旦加密算法泄露，就不安全了
	 


方式三 ：
	通过页面重定向的方式：
	最后一种介绍的方式，是通过父应用和子应用来回重定向进行通信，实现信息的安全传递，
	父应用提供一个GET方式的登录接口，用户通过子应用重定向连接的方式访问这个接口，
	若果用户没有登录，则返回一个登录的页面，用户输入账号密码进行登录，
	如果已经登录了，则生成加密的Token,并且重定向到子应用的验证Token的接口，通过解密和
	校验后，子应用登录当前用户
	
	         用户                                                               父应用                                                                    子应用
	    / \ 					     |								|
		 |						  	 |								| 				
		 |                           |                              |
	     |                           |                              |
		|===|       登录                           |=====|                           |
		|	|-------------------->|     |	                        |
		|	|                     |     |                           |
		|	|<--------------------|     | 	                        |
 		|===|         登录成功            |=====|	                        |
		  |                                                         |
		  |                                                         |
		  |                                                         |
		  |                                                         |  
		  |															|				
		|====|           登录									 |     |		
		|    |-------------------------------------------------->|
		|    |													 |			
		|    |                                                   |
		|    |                                                   |
		|    |                                                   |
		|    |                                                   | 
		|    |                                                   |
		|    |
		|    | 
		|    |
		|    |
		|    |
		|    |
		|    |
		|    | 
		|    |
		|====|	
		
					 
使用独立登录系统：
	









							 
						 
	